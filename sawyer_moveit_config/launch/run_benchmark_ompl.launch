<launch>

  <!-- This argument must specify the list of .cfg files to process for benchmarking -->
  <!-- Assuming this is benchmark options file in demo_panda.launch-->
  <arg name="cfg" default="$(find sawyer_moveit_config)/config/sawyertest.yaml" />

  <!-- Load URDF -->
  <include file="$(find sawyer_moveit_config)/launch/planning_context.launch">
    <arg name="load_robot_description" value="true"/>
  </include>

   <!-- This was primarily taken from demo_panda.launch. It didn't exist before-->
   <!-- Load all planning pipelines that will be benchmarked -->
  <include ns="moveit_run_benchmark" file="$(find sawyer_moveit_config)/launch/planning_pipeline.launch.xml">
    <arg name="pipeline" value="ompl" />
  </include>

  <!-- Start the database -->
<!--   <include file="$(find sawyer_moveit_config)/launch/warehouse.launch">
    <arg name="moveit_warehouse_database_path" value="moveit_ompl_benchmark_warehouse"/>
  </include> -->

    <!-- Load warehouse containing scenes and queries to benchmark -->
  <include file="$(find sawyer_moveit_config)/launch/default_warehouse_db.launch" />


  <!-- Start Benchmark Executable -->
  <!--changed arg cfg to arg bench_opts then back to cfg-->
  <node name="$(anon moveit_benchmark)" pkg="moveit_ros_benchmarks" type="moveit_run_benchmark" args="$(arg cfg) --benchmark-planners" respawn="false" output="screen">
    <rosparam command="load" file="$(find sawyer_moveit_config)/config/kinematics.yaml"/>
    <rosparam command="load" file="$(find sawyer_moveit_config)/config/ompl_planning.yaml"/>
    <rosparam command="load" file="$(arg cfg)"/>
  </node>

</launch>
